#def draw_layer_h_0$(x$; y$; width$; height$)
	'<rect x="'x$'" y="'y$'" width="'width$'" height="'height$'" style="stroke:black; stroke-width:2; fill:orange; fill-opacity:0.6; stroke-opacity:1" />
#end def
#def draw_layer_h_90$(x$; y$; width$; height$)
	'<rect x="'x$'" y="'y$'" width="'width$'" height="'height$'" style="stroke:black; stroke-width:2; fill:yellow; fill-opacity:0.6; stroke-opacity:1" />
#end def

#def check_cltData$(cltLayers$)
	#hide
	n = n_rows(cltLayers$)
	#show
	#for layer = 1 : n
		#if cltLayers$.(layer; 2) ≠ 0 ∧ cltLayers$.(layer; 2) ≠ 90
			"ERROR: CLT LAYERS' DIRECTIONS MUST BE 0° OR 90°
			#break
		#end if
	#loop
#end def
#def draw_clt$(cltLayers$; bx$; by$; t_full$)
	#val
	#hide
	WIDTHX = 1*bx$|cm
	WIDTHY = 1*by$|cm
	HEIGHT = .5*t_full$|cm
	n = n_rows(cltLayers$)
	t_cumSum0 = join(0mm; t_cumSum)
	#show
	 '<svg width = "100"height = "100"viewBox = "0 0 100 100">  
	#for layer = 1 : n
		#if cltLayers$.(layer; 2) ≡ 0
			draw_layer_h_0$(0mm; t_cumSum0.(layer)|mm; WIDTHX; cltLayers$.(layer; 1)|mm)
			draw_layer_h_90$(WIDTHX + 500mm; t_cumSum0.(layer)|mm; WIDTHY; cltLayers$.(layer; 1)|mm)
		#else 
			draw_layer_h_90$(0mm; t_cumSum0.(layer)|mm; WIDTHX; cltLayers$.(layer; 1)|mm)
			draw_layer_h_0$(WIDTHX + 500mm; t_cumSum0.(layer)|mm; WIDTHY; cltLayers$.(layer; 1)|mm)
		#end if
	#loop
	'</svg>
	#equ
#end def
#def calc_cltProperties$(cltLayers$; width$; height$)
	check_cltData$(cltLayers$)
	#hide
	t_net = 0mm
	n = n_rows(cltLayers$)
	#for layer = 1 : n
		#if cltLayers$.(layer; 2) ≡ 0
			t_net = t_net + cltLayers$.(layer; 1)
			layer
		#end if
	#loop
	t_full = sum(col(cltLayers$; 1))
	t_cumSum = vector(n)
	t_centreFromBottom = vector(n)
	t_centreFromMiddle = vector(n)
	t_sum = 0mm
	#for layer = 1 : n
		t_sum = t_sum + cltLayers$.(layer; 1)
		t_cumSum.(layer) = t_sum
		t_centreFromBottom.(layer) = t_cumSum.(layer) - cltLayers$.(layer; 1)/2
		t_centreFromMiddle.(layer) = t_centreFromBottom.(layer) - t_full/2
	#loop
	I_x = 0mm^4
	I_y = 0mm^4
	#for layer = 1 : n
		#if cltLayers$.(layer; 2) ≡ 0
			I_x = I_x + width$*(cltLayers$.(layer; 1)^3/12 + cltLayers$.(layer; 1)*t_centreFromMiddle.(layer)^2)
		#end if
		#if cltLayers$.(layer; 2) ≡ 90
			I_y = I_y + height$*(cltLayers$.(layer; 1)^3/12 + cltLayers$.(layer; 1)*t_centreFromMiddle.(layer)^2)
		#end if
	#loop
	W_x = I_x/(t_full/2)
	W_y = I_y/(t_full/2)
	A_full = t_full*width$
	A_net = t_net*width$
	#show
	draw_clt$(cltLayers$; width$; height$; t_full)
#end def